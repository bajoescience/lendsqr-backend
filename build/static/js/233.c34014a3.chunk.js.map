{"version":3,"file":"static/js/233.c34014a3.chunk.js","mappings":"6KAYA,MAAMA,EAAU,CACd,CACEC,I,6rBACAC,MAAO,gBAET,CACED,I,iqBACAC,MAAO,kBAET,CACED,I,qrBACAC,MAAO,kBA0EX,EAtEqBC,IAQd,IARe,kBACpBC,EAAiB,UACjBC,EAAS,aACTC,GAKDH,EACC,MAAMI,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,KACHJ,IACFK,SAASC,eAAe,cAAiCC,MAAMC,KAC9DC,EAAAA,GAAiBD,KACrB,GACC,CAACR,IAIJ,MAWMU,EAAoBC,GACjBC,UAEL,IAAKZ,EAAW,OAEhB,MAAMa,QAAgBC,EAAAA,EAAAA,IAAiBH,EAAQX,GAG/CD,EAAkBc,GAGlBZ,EAAa,KAAK,EAItB,OACEc,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAoBC,GAAG,aAAYC,SAC/CvB,EAAQwB,KAAKC,IACZC,EAAAA,EAAAA,MAAA,OAEEC,QACqB,iBAAfF,EAAKvB,MA9BT0B,IACNrB,EAAS,0BAADsB,OAA2BxB,IAGnCC,EAAa,KAAK,EA4Bc,mBAAfmB,EAAKvB,MACPa,EAAiB,eAEjBA,EAAiB,UAEvBQ,SAAA,EAELH,EAAAA,EAAAA,KAAA,OAAKnB,IAAKwB,EAAKxB,IAAK6B,IAAKL,EAAKvB,SAC9BkB,EAAAA,EAAAA,KAAA,QAAAG,SAAOE,EAAKvB,UAZPuB,EAAKvB,UAeV,C","sources":["components/StatusChange.tsx"],"sourcesContent":["import viewIcon from \"../img/viewDetails.png\";\r\nimport friendIcon from \"../img/delete-friend.png\";\r\nimport activateIcon from \"../img/active-user.png\";\r\nimport { changeUserstatus, stylePositioning } from \"../helper\";\r\n\r\nimport { TStatus, TUserObj } from \"../types\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport \"../styles/StatusCard.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Content of the component to be rendered\r\nconst viewArr = [\r\n  {\r\n    src: viewIcon,\r\n    title: \"View Details\",\r\n  },\r\n  {\r\n    src: friendIcon,\r\n    title: \"Blacklist User\",\r\n  },\r\n  {\r\n    src: activateIcon,\r\n    title: \"Activate User\",\r\n  },\r\n] as const;\r\n\r\nconst StatusChange = ({\r\n  updateChangedUser,\r\n  anchor_id,\r\n  setanchor_id,\r\n}: {\r\n  anchor_id: string | null;\r\n  setanchor_id: React.Dispatch<React.SetStateAction<string | null>>;\r\n  updateChangedUser: (changedUser: TUserObj) => null | undefined;\r\n}) => {\r\n  const navigate = useNavigate();\r\n\r\n  // Hide the status card when not in use\r\n  useEffect(() => {\r\n    if (!anchor_id) {\r\n      (document.getElementById(\"statusCard\") as HTMLDivElement).style.left =\r\n        stylePositioning.left;\r\n    }\r\n  }, [anchor_id]);\r\n\r\n  // These are the event handler func for each option\r\n  // Redirect the client to the Full user page\r\n  const handleViewDetails = () => {\r\n    // Go to the next page\r\n    return (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n      navigate(`/dashboard/userdetails/${anchor_id}`);\r\n\r\n      // Close the card\r\n      setanchor_id(null);\r\n    };\r\n  };\r\n\r\n  // Change the user status\r\n  const handleUserChange = (status: TStatus) => {\r\n    return async (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n      // Fetch the user and change the status\r\n      if (!anchor_id) return;\r\n\r\n      const userObj = await changeUserstatus(status, anchor_id);\r\n\r\n      // save the updated user\r\n      updateChangedUser(userObj);\r\n\r\n      // Close the card\r\n      setanchor_id(null);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"status-change-con\" id=\"statusCard\">\r\n      {viewArr.map((view) => (\r\n        <div\r\n          key={view.title}\r\n          onClick={(() => {\r\n            if (view.title === \"View Details\") {\r\n              return handleViewDetails();\r\n            } else if (view.title === \"Blacklist User\") {\r\n              return handleUserChange(\"Blacklisted\");\r\n            } else {\r\n              return handleUserChange(\"Active\");\r\n            }\r\n          })()}\r\n        >\r\n          <img src={view.src} alt={view.title} />\r\n          <span>{view.title}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusChange;\r\n"],"names":["viewArr","src","title","_ref","updateChangedUser","anchor_id","setanchor_id","navigate","useNavigate","useEffect","document","getElementById","style","left","stylePositioning","handleUserChange","status","async","userObj","changeUserstatus","_jsx","className","id","children","map","view","_jsxs","onClick","e","concat","alt"],"sourceRoot":""}