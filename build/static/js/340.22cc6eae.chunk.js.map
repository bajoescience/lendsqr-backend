{"version":3,"file":"static/js/340.22cc6eae.chunk.js","mappings":"ySAaA,MAkHA,EAlHaA,KAGX,MAAM,KAACC,EAAI,QAAEC,IAAqBC,EAAAA,EAAAA,MAC5BC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,KACJL,IACFM,aAAaC,WAAW,cACxBN,EAAQ,MACV,GACC,CAACD,EAAMG,IAIV,MAAOK,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAcC,IAAmBJ,EAAAA,EAAAA,WAAS,IAC1CK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAwB,MAwChE,OACEO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,WAASC,UAAU,WAAUF,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,WAASI,UAAU,YAAWF,UAC5BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,UAC1BF,EAAAA,EAAAA,KAAA,OAAKK,IAAKC,EAAaC,IAAI,eAAeC,MAAO,IAAKC,OAAQ,QAEhET,EAAAA,EAAAA,KAAA,OAAKI,UAAU,aAAYF,UACzBF,EAAAA,EAAAA,KAAA,OAAKK,IAAKK,EAASH,IAAI,OAAOC,MAAO,IAAKC,OAAQ,IAAKE,QAAQ,iBAIrEX,EAAAA,EAAAA,KAAA,WAASI,UAAU,WAAUF,UAC3BC,EAAAA,EAAAA,MAAA,QAAMS,SA7CQC,IAIpB,GAHAA,EAAEC,iBAGmB,IAAjBvB,EAAMwB,QAAoC,IAApBrB,EAASqB,OAEjC,YADAhB,EAAgB,wCAKlB,KAAKiB,EAAAA,EAAAA,IAAczB,GAEjB,YADAQ,EAAgB,sCAIlB,MAAMhB,EAAc,CAClBQ,MAAOA,EACPG,SAAUA,GAIZV,EAAQD,GACRS,EAAS,IACTG,EAAY,IACZI,EAAgB,MAEhBV,aAAa4B,QAAQ,aAAcC,KAAKC,UAAUpC,IAClDG,EAAS,IAAI,EAkBsBgB,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,6BAGHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,SAAEJ,KAE9BE,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,SAAOoB,KAAK,OAAOC,YAAY,QAC/BC,MAAO/B,EAAQgC,SAAWV,IAAOrB,EAASqB,EAAEW,OAAOF,MAAM,EACzDlB,UAAU,oBAIZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCF,EAAAA,EAAAA,KAAA,SAAOoB,KAAMxB,EAAe,OAAQ,WAAayB,YAAY,WAC7DC,MAAO5B,EAAW6B,SAAWV,IAAOlB,EAAYkB,EAAEW,OAAOF,MAAM,EAC/DlB,UAAU,qBAEVJ,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAAShB,UAAU,cAAcqB,QAtEhCZ,IAC5BA,EAAEC,iBACFjB,GAAiBD,EAAa,EAoE4DM,SACzEN,EAAe,OAAQ,aAI5BI,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAAShB,UAAU,gBAAeF,SAAC,wBAIlDF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAAShB,UAAU,eAAcF,SAAC,yBAM1D,C","sources":["routes/Auth.tsx"],"sourcesContent":["import { useLoaderData, useNavigate, useOutletContext } from 'react-router-dom'\r\nimport { validateEmail } from '../helper'\r\nimport { TContext, TUser } from '../types'\r\n\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport companyIcon from '../img/Group.jpg'\r\nimport homeImg from '../img/pablo-sign-in 1.jpg'\r\n\r\n\r\nimport '../styles/Home.css'\r\n\r\nconst Auth = () => {  \r\n\r\n  // Fetch setUser for whole App from higher up the nav tree.\r\n  const {user, setUser}: TContext = useOutletContext()\r\n  const navigate = useNavigate()\r\n\r\n  // If user exists, clear user for user to register again\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.removeItem('loggedUser')\r\n      setUser(null)\r\n    }\r\n  }, [user, navigate])\r\n  \r\n\r\n  // Save user details in a controlled state\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null)\r\n  \r\n\r\n  // Toggle between seeing password and not seeing password\r\n  const handlePasswordToggle = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault()\r\n    setShowPassword(!showPassword)\r\n  }\r\n\r\n  const handleSubmit = (e :React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    // Check if email or password is entered\r\n    if (email.length === 0 || password.length === 0) {\r\n      setErrorMessage('Please enter your Email and Password')\r\n      return\r\n    }\r\n\r\n    // Check if email is valid\r\n    if (!validateEmail(email)) {\r\n      setErrorMessage('Please enter a valid email address')\r\n      return\r\n    }\r\n\r\n    const user: TUser = {\r\n      email: email,\r\n      password: password\r\n    }\r\n\r\n    // save user details\r\n    setUser(user)\r\n    setEmail('')\r\n    setPassword('')\r\n    setErrorMessage(null)\r\n\r\n    localStorage.setItem('loggedUser', JSON.stringify(user))\r\n    navigate('/')\r\n  }\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <article className='homepage'>\r\n        <section className='section-1'>\r\n          <div>\r\n            <div className='hm-icon-con'>\r\n              <img src={companyIcon} alt=\"Company Icon\" width={174} height={36} />\r\n            </div>\r\n            <div className='hm-img-con'>\r\n              <img src={homeImg} alt=\"Home\" width={600} height={338} loading='lazy'/>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className='form-con'>\r\n          <form onSubmit={handleSubmit}>\r\n            <h2>Welcome!</h2>\r\n            <p>Enter details to login.</p>\r\n\r\n            {/* Input fields container */}\r\n            <div className='form-input-con'>\r\n                <div className='err-message'>{errorMessage}</div>\r\n\r\n                <div>\r\n                  <input type=\"text\" placeholder='Email' \r\n                  value={email}  onChange={(e) => {setEmail(e.target.value)}}\r\n                  className='email inputs' \r\n                  />\r\n                </div>\r\n\r\n                <div className='password-entry-con'>\r\n                  <input type={showPassword ? \"text\" :\"password\"}  placeholder='Password'\r\n                  value={password}  onChange={(e) => {setPassword(e.target.value)}}\r\n                  className='password inputs'\r\n                   />\r\n                  <button type='button' className='show-button' onClick={handlePasswordToggle}>\r\n                    {showPassword ? 'HIDE' :'SHOW'}\r\n                  </button>\r\n                </div>\r\n\r\n                <div>\r\n                  <button type='button' className='forgot-button'>\r\n                    FORGOT PASSWORD?\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <button type='submit' className='login-button'>LOG IN</button>\r\n                </div>\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </article>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Auth"],"names":["Auth","user","setUser","useOutletContext","navigate","useNavigate","useEffect","localStorage","removeItem","email","setEmail","useState","password","setPassword","showPassword","setShowPassword","errorMessage","setErrorMessage","_jsx","_Fragment","children","_jsxs","className","src","companyIcon","alt","width","height","homeImg","loading","onSubmit","e","preventDefault","length","validateEmail","setItem","JSON","stringify","type","placeholder","value","onChange","target","onClick"],"sourceRoot":""}