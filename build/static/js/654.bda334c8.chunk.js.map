{"version":3,"file":"static/js/654.bda334c8.chunk.js","mappings":"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","sources":["helper.ts"],"sourcesContent":["import {\r\n  TSidebarLink,\r\n  TPaginate,\r\n  TUserObj,\r\n  TDisplayStat,\r\n  TStatus,\r\n  TUserComplete,\r\n} from \"./types\";\r\n\r\n// These are the Sidebar imports\r\nimport userIcon from \"./img/user.png\";\r\nimport guarantorsIcon from \"./img/Guarantors.png\";\r\nimport loansIcon from \"./img/Loans.png\";\r\nimport decisionModelsIcon from \"./img/Decision Models.png\";\r\nimport savingsIcon from \"./img/Savings.png\";\r\nimport loanRequestsIcon from \"./img/Loan Requests.png\";\r\nimport whitelistIcon from \"./img/Whitelist.png\";\r\nimport karmaIcon from \"./img/Karma.png\";\r\n\r\nimport organizationIcon from \"./img/Organization.png\";\r\nimport loanproductsIcon from \"./img/Loan Products.png\";\r\nimport savingsProductsIcon from \"./img/Savings Products.png\";\r\nimport feesAndChargesIcon from \"./img/Fees and Charges.png\";\r\nimport servicesIcon from \"./img/Services.png\";\r\nimport serviceAccountIcon from \"./img/Service Account.png\";\r\nimport settlementsIcon from \"./img/Settlements.png\";\r\nimport reportsIcon from \"./img/Reports.png\";\r\n\r\nimport prefrencesIcon from \"./img/Prefences.png\";\r\nimport feesAndPricing from \"./img/Fees and Pricing.png\";\r\nimport auditLogsIcon from \"./img/Audit Logs.png\";\r\n\r\nimport usersIcon from \"./img/USERS.png\";\r\nimport activeusersIcon from \"./img/ACTIVE USERS.png\";\r\nimport loanusersIcon from \"./img/USERS WITH LOANS.png\";\r\nimport savingusersIcon from \"./img/USERS WITH SAVINGS.png\";\r\nimport { getUser, updateUser } from \"./services/user\";\r\n\r\n// Make an element disappear\r\nexport const stylePositioning = {\r\n  left: \"-3000px\",\r\n};\r\n\r\n// Change a TUserComplete type to a TUserObj type\r\nexport const changeUserType = (user: TUserComplete): TUserObj => {\r\n  return {\r\n    id: user.id,\r\n    organization: user.organization,\r\n    username: user.username,\r\n    email: user.email,\r\n    phone: user.phone,\r\n    date: user.date,\r\n    status: user.status,\r\n  };\r\n};\r\n\r\n// Change a user's status\r\nexport const changeUserstatus = async (status: TStatus, userID: string) => {\r\n  const userObj = (await getUser(userID)) as TUserObj;\r\n\r\n  const changedUser: TUserComplete = await updateUser(userID, {\r\n    ...userObj,\r\n    status: status,\r\n  });\r\n\r\n  return changeUserType(changedUser);\r\n};\r\n\r\n// Create a function that takes the users to be displayed\r\n// and filters them using the schema\r\n// submitted by the filter form\r\nexport const filterUsers = (\r\n  users: TUserObj[] | null,\r\n  filterSchema: TUserObj\r\n): TUserObj[] | null => {\r\n  const filteredUsers = users?.filter((user) => {\r\n    let bool = true;\r\n\r\n    Object.keys(user).forEach((key) => {\r\n      const userProperty = user[key as keyof TUserObj].toLocaleLowerCase();\r\n      const match = (\r\n        filterSchema[key as keyof TUserObj] as string\r\n      ).toLocaleLowerCase();\r\n\r\n      if (!userProperty?.includes(match)) {\r\n        bool = false;\r\n      }\r\n    });\r\n    return bool;\r\n  });\r\n\r\n  if (!filteredUsers || filteredUsers.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return filteredUsers;\r\n};\r\n\r\nexport const validateEmail = (email: string): boolean => {\r\n  const re = /^\\S+@\\S+\\.\\S+$/;\r\n  return re.test(email);\r\n};\r\n\r\nexport const getNameFromEmail = (\r\n  email: string | undefined\r\n): string | undefined => {\r\n  return email?.substring(0, email?.indexOf(\"@\"));\r\n};\r\n\r\nexport const nameToUrl = (name: string) =>\r\n  name.toLocaleLowerCase().replaceAll(\" \", \"-\");\r\n\r\n// These are the table headers for the users page\r\nexport const tHeaders = [\r\n  \"organization\",\r\n  \"username\",\r\n  \"email\",\r\n  \"phone number\",\r\n  \"date joined\",\r\n  \"status\",\r\n] as const;\r\n\r\n// List of possible pagination values for users table\r\nexport const paginateArray: TPaginate[] = [10, 20, 30, 50, 100];\r\n\r\n// Function that divides the users array by pagination\r\nexport const paginateFunc = ({\r\n  page,\r\n  diff,\r\n  users,\r\n}: {\r\n  page: number;\r\n  diff: TPaginate;\r\n  users: TUserObj[] | null;\r\n}): TUserObj[] | null => {\r\n  // Get the start and end of the paginate string\r\n  const start = 0 + (page - 1) * diff;\r\n  const end = diff * page;\r\n  const userSlice = users?.slice(start, end);\r\n  if (!userSlice) {\r\n    return null;\r\n  }\r\n  return userSlice;\r\n};\r\n\r\n// Display the user stats for the user page box\r\nexport const displayStats: TDisplayStat[] = [\r\n  {\r\n    name: \"USERS\",\r\n    icon: usersIcon,\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"ACTIVE USERS\",\r\n    count: 0,\r\n    icon: activeusersIcon,\r\n  },\r\n  {\r\n    name: \"USERS WITH LOANS\",\r\n    count: 12453,\r\n    icon: loanusersIcon,\r\n  },\r\n  {\r\n    name: \"USERS WITH SAVINGS\",\r\n    count: 102453,\r\n    icon: savingusersIcon,\r\n  },\r\n];\r\n\r\n// Store each section of sidebar as a type array in sidebarsection\r\ntype TSidebarArray = {\r\n  title: string;\r\n  children: TSidebarLink[];\r\n};\r\n\r\n// Render the sidebar links dynamically using this read-only array\r\nexport const sidebarSection: TSidebarArray[] = [\r\n  {\r\n    title: \"customers\",\r\n    children: [\r\n      {\r\n        name: \"Users\",\r\n        icon: userIcon,\r\n        active: true,\r\n        url: \"users\",\r\n      },\r\n      {\r\n        name: \"Guarantors\",\r\n        icon: guarantorsIcon,\r\n        active: false,\r\n        url: \"guarantors\",\r\n      },\r\n      {\r\n        name: \"Loans\",\r\n        icon: loansIcon,\r\n        active: false,\r\n        url: \"loans\",\r\n      },\r\n      {\r\n        name: \"Decision Models\",\r\n        icon: decisionModelsIcon,\r\n        active: false,\r\n        url: \"decision-models\",\r\n      },\r\n      {\r\n        name: \"Savings\",\r\n        icon: savingsIcon,\r\n        active: false,\r\n        url: \"savings\",\r\n      },\r\n      {\r\n        name: \"Loan Requests\",\r\n        icon: loanRequestsIcon,\r\n        active: false,\r\n        url: \"loan-requests\",\r\n      },\r\n      {\r\n        name: \"Whitelist\",\r\n        icon: whitelistIcon,\r\n        active: false,\r\n        url: \"whitelist\",\r\n      },\r\n      {\r\n        name: \"Karma\",\r\n        icon: karmaIcon,\r\n        active: false,\r\n        url: \"karma\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"businesses\",\r\n    children: [\r\n      {\r\n        name: \"Organization\",\r\n        icon: organizationIcon,\r\n      },\r\n      {\r\n        name: \"Loan Products\",\r\n        icon: loanproductsIcon,\r\n      },\r\n      {\r\n        name: \"Saving Products\",\r\n        icon: savingsProductsIcon,\r\n      },\r\n      {\r\n        name: \"Fees and Charges\",\r\n        icon: feesAndChargesIcon,\r\n      },\r\n      {\r\n        name: \"Services\",\r\n        icon: servicesIcon,\r\n      },\r\n      {\r\n        name: \"Service Account\",\r\n        icon: serviceAccountIcon,\r\n      },\r\n      {\r\n        name: \"Settlements\",\r\n        icon: settlementsIcon,\r\n      },\r\n      {\r\n        name: \"Reports\",\r\n        icon: reportsIcon,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"settings\",\r\n    children: [\r\n      {\r\n        name: \"Prefrences\",\r\n        icon: prefrencesIcon,\r\n      },\r\n      {\r\n        name: \"Fees And Pricing\",\r\n        icon: feesAndPricing,\r\n      },\r\n      {\r\n        name: \"Audit Logs\",\r\n        icon: auditLogsIcon,\r\n      },\r\n    ],\r\n  },\r\n];\r\n"],"names":["stylePositioning","left","changeUserType","user","id","organization","username","email","phone","date","status","changeUserstatus","async","userID","userObj","getUser","changedUser","updateUser","filterUsers","users","filterSchema","filteredUsers","filter","bool","Object","keys","forEach","key","userProperty","toLocaleLowerCase","match","includes","length","validateEmail","test","getNameFromEmail","substring","indexOf","nameToUrl","name","replaceAll","tHeaders","paginateArray","paginateFunc","_ref","page","diff","start","end","userSlice","slice","displayStats","icon","count","sidebarSection","title","children","active","url"],"sourceRoot":""}