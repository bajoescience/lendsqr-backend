{"version":3,"file":"static/js/820.2260a2f1.chunk.js","mappings":"qKAaA,MAuCA,EAvCoBA,IAAwD,IAAvD,KAACC,EAAI,UAAEC,EAAS,aAAEC,GAA+BH,EACpE,MAAMI,GAAWC,EAAAA,EAAAA,MAaXC,GAAMC,EAAAA,EAAAA,IAAUN,EAAKO,MAa3B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,QAXcC,IAGD,cAAdV,EAAKO,KAITJ,EAASE,GAHPF,EAAS,aAGE,EAIcQ,WArBtBV,GAA2B,cAAdD,EAAKO,MAGhBN,IAAcI,EAFZ,2BAEkB,oBAkB6BO,SAAA,EACtDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,KAAA,OAAKC,IAAKd,EAAKe,KAAMC,IAAKhB,EAAKO,KAAO,YAExCM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAC9BZ,EAAKO,SAEJ,E,YCrCV,MAoEA,EApEgBU,KAEd,MAAM,KAACjB,IAAQkB,EAAAA,EAAAA,MAIRjB,EAAWC,IAAgBiB,EAAAA,EAAAA,eAA6BC,GAS/D,OAJAC,EAAAA,EAAAA,YAAU,KACRnB,EAAaF,EAAK,GACjB,CAACA,KAGFa,EAAAA,EAAAA,KAAAS,EAAAA,SAAA,CAAAV,UAEEJ,EAAAA,EAAAA,MAAA,OAAK,aAAW,uBAAuBG,UAAU,cAAaC,SAAA,EAC5DJ,EAAAA,EAAAA,MAAA,WAASG,UAAU,eAAcC,SAAA,EAC/BJ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gCAA+BC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,KAAA,OAAKC,I,yVAA6BE,IAAI,0BAExCH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAC,yBAGlCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,OAAKC,I,iYAAcE,IAAI,cAY3BH,EAAAA,EAAAA,KAACU,EAAW,CACZvB,KAAM,CAACO,KAAM,YAAaQ,K,8sBAC1Bd,UAAWA,EACXC,aAAcA,OAIfsB,EAAAA,GAAeC,KAAIC,IAClBlB,EAAAA,EAAAA,MAAA,WAA0BG,UAAU,eAAcC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAC3Bc,EAAKC,MAAMC,gBAIbF,EAAKd,SAASa,KAAIzB,IACjBa,EAAAA,EAAAA,KAACU,EAAW,CAEZvB,KAAMA,EACNC,UAAWA,EACXC,aAAcA,GAHTF,EAAKO,UARAmB,EAAKC,aAgBtB,C","sources":["components/SidebarLink.tsx","components/Sidebar.tsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\r\nimport { TSidebarLink } from \"../types\"\r\nimport { nameToUrl } from \"../helper\"\r\n\r\ntype SidebarLinkProps = {\r\n  link: TSidebarLink, \r\n  activeNow: string | undefined,\r\n  setActiveNow: React.Dispatch<React.SetStateAction<string | undefined>>,\r\n}\r\n\r\n// NOTE: In this component\r\n// Dashboard link functionality is hard-coded\r\n// Due to the link being a special case\r\nconst SidebarLink = ({link, activeNow, setActiveNow} :SidebarLinkProps) => { \r\n  const navigate = useNavigate() \r\n\r\n  const activeClassFunc = () => {\r\n    // If the dashboard url is visited\r\n    // The activenow state will hold undefined since there is no url params\r\n    // THen we set the dashboard link to active\r\n    if (!activeNow && link.name === 'Dashboard') {\r\n      return 'sidebar-child-con active'\r\n    }\r\n    return activeNow !== url ? 'sidebar-child-con' : 'sidebar-child-con active'\r\n  }\r\n\r\n  // Create the appropiate url for the link component\r\n  const url = nameToUrl(link.name)\r\n\r\n  // If this component is clicked, navigate to the url\r\n  const handleClick = (e :React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    // If the link for dashb oard is clicked\r\n    // Navigate straight to dashboard\r\n    if (link.name === 'Dashboard') {\r\n      navigate('/dashboard')\r\n      return\r\n    }\r\n    navigate(url)\r\n  }\r\n\r\n  return (\r\n    <div onClick={handleClick} className={activeClassFunc()}>\r\n      <div className='sidebar-link-icon'>\r\n        <img src={link.icon} alt={link.name + 'icon'} />\r\n      </div>\r\n      <div className='sidebar-nav-name'>\r\n        {link.name}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SidebarLink","import switchOrganizationIcon from '../img/Switch Organzation.png'\r\nimport endIcon from '../img/end.png'\r\nimport dashboardIcon from '../img/Dashboard.png'\r\n\r\nimport '../styles/Sidebar.css'\r\nimport SidebarLink from './SidebarLink'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { sidebarSection } from '../helper'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst Sidebar = () => {\r\n  // Get the current url parameter\r\n  const {link} = useParams()\r\n  \r\n\r\n  // Store the sidebar link name that is curently active\r\n  const [activeNow, setActiveNow] = useState<string | undefined>(undefined)\r\n  \r\n\r\n  // Once the link changes\r\n  // We set it to the active link\r\n  useEffect(() => {\r\n    setActiveNow(link)\r\n  }, [link])\r\n  \r\n  return (\r\n    <>\r\n      \r\n      <nav aria-label='secondary-navigation' className='sidebar-nav'>\r\n        <section className='sidebar-sect'>\r\n          <div className='sidebar-child-con add-padding'>\r\n            <div className='sidebar-link-icon'>\r\n              <img src={switchOrganizationIcon} alt=\"switch organzation\" />\r\n            </div>\r\n            <div className='sidebar-nav-name'>\r\n              Switch Organization\r\n            </div>\r\n            <div className='sidebar-link-end-icon'>\r\n              <img src={endIcon} alt=\"end\" />\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className='sidebar-child-con'>\r\n            <div className='sidebar-link-icon'>\r\n              <img src={dashboardIcon} alt=\"dashboard Icon\" />\r\n            </div>\r\n            <div className='sidebar-nav-name'>\r\n              Dashboard\r\n            </div>\r\n          </div> */}\r\n          <SidebarLink\r\n          link={{name: 'Dashboard', icon: dashboardIcon}}\r\n          activeNow={activeNow}\r\n          setActiveNow={setActiveNow} />\r\n        </section>\r\n\r\n        {/* Dynamically render the sidebar link containers */}\r\n        {sidebarSection.map(sect => (\r\n          <section key={sect.title} className='sidebar-sect'>\r\n            <div className='section-title'>\r\n              {sect.title.toUpperCase()}\r\n            </div>\r\n\r\n            {/* Render each link in the container */}\r\n            {sect.children.map(link => (\r\n              <SidebarLink \r\n              key={link.name}\r\n              link={link} \r\n              activeNow={activeNow}\r\n              setActiveNow={setActiveNow} />\r\n            ))}\r\n          </section>\r\n        ))}\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sidebar"],"names":["_ref","link","activeNow","setActiveNow","navigate","useNavigate","url","nameToUrl","name","_jsxs","onClick","e","className","children","_jsx","src","icon","alt","Sidebar","useParams","useState","undefined","useEffect","_Fragment","SidebarLink","sidebarSection","map","sect","title","toUpperCase"],"sourceRoot":""}