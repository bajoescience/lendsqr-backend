{"version":3,"file":"static/js/12.2c810ffe.chunk.js","mappings":"oLAOA,MAAMA,GAAQC,EAAAA,EAAAA,OAAK,IAAM,+BACnBC,GAAQD,EAAAA,EAAAA,OAAK,IAAM,6BAGzB,IAAIE,EAAqB,GACzBC,EAAAA,GAAeC,SAASC,IACtB,MAAMC,EAAqBD,EAAKE,SAASC,KAAKC,IAC5CC,EAAAA,EAAAA,IAAUD,EAAME,QAElBT,EAAWA,EAASU,OAAO,IAAIN,GAAU,IAG3C,MA0EA,EA1EaO,KAEX,MAAM,KAAEC,IAASC,EAAAA,EAAAA,MAEVC,EAAOC,IAAYC,EAAAA,EAAAA,UAA4B,MAGhDC,GAAmBC,EAAAA,EAAAA,QAAO,GAG1BC,GAAkBD,EAAAA,EAAAA,QAAO,GAgC/B,OA3BAE,EAAAA,EAAAA,YAAU,KACWC,WACjB,IACE,MAAMC,QAAkBC,EAAAA,EAAAA,MAGxBN,EAAiBO,QAAU,EAC3BL,EAAgBK,QAAU,EAG1B,MAAMC,EAAeH,EAAShB,KAAKoB,IACjCP,EAAgBK,UACI,WAAhBE,EAAKC,QACPV,EAAiBO,WAEZI,EAAAA,EAAAA,IAAeF,MAGxBX,EAASU,EACX,CAAE,MAAOI,GACPd,EAAS,KACX,GAEFe,EAAY,GACX,IAGU,UAATlB,GAEAmB,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAA,OAAA1B,SAAK,eAAiBA,UACxC0B,EAAAA,EAAAA,KAAClC,EAAK,CACJiB,MAAOA,EACPC,SAAUA,EACVE,iBAAkBA,EAAiBO,QACnCL,gBAAiBA,EAAgBK,aAOpCZ,GAAQZ,EAASkC,SAAStB,IAE3BmB,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAA,OAAA1B,SAAK,eAAiBA,UACxC0B,EAAAA,EAAAA,KAAChC,EAAK,CAACoC,YAAU,OAOrBJ,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAA/B,UACE0B,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAA,OAAA1B,SAAK,eAAiBA,UACxC0B,EAAAA,EAAAA,KAAChC,EAAK,OAEP,C","sources":["routes/Main.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { changeUserType, nameToUrl, sidebarSection } from \"../helper\";\r\n\r\n// import Users from \"../components/Users\";\r\nimport { lazy, Suspense, useEffect, useRef, useState } from \"react\";\r\nimport { TUserComplete, TUserObj } from \"../types\";\r\nimport { getUsers } from \"../services/user\";\r\nconst Users = lazy(() => import(\"../components/Users\"));\r\nconst Error = lazy(() => import(\"../components/Error\"));\r\n\r\n// Get all the links from the sidebar section\r\nlet allLinks: string[] = [];\r\nsidebarSection.forEach((sect) => {\r\n  const linkName: string[] = sect.children.map((child) =>\r\n    nameToUrl(child.name)\r\n  );\r\n  allLinks = allLinks.concat([...linkName]);\r\n});\r\n\r\nconst Main = () => {\r\n  // Fetch the current page link from the url\r\n  const { link } = useParams<string>();\r\n\r\n  const [users, setUsers] = useState<TUserObj[] | null>(null);\r\n\r\n  // Count amount of active users\r\n  const activeUsersCount = useRef(0);\r\n\r\n  // Count amount of users\r\n  const totalUsersCount = useRef(0);\r\n\r\n  // const activeUsersCount = { count: 0 };\r\n\r\n  // Fetch the available users from the database\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const rawUsers = (await getUsers()) as TUserComplete[];\r\n\r\n        // Reset all user counters\r\n        activeUsersCount.current = 0;\r\n        totalUsersCount.current = 0;\r\n\r\n        // Fetch users and count length of active and total users\r\n        const fetchedUsers = rawUsers.map((user) => {\r\n          totalUsersCount.current++;\r\n          if (user.status === \"Active\") {\r\n            activeUsersCount.current++;\r\n          }\r\n          return changeUserType(user);\r\n        });\r\n\r\n        setUsers(fetchedUsers);\r\n      } catch (error) {\r\n        setUsers(null);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // If url is the url for users page, render users\r\n  if (link === \"users\") {\r\n    return (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Users\r\n          users={users}\r\n          setUsers={setUsers}\r\n          activeUsersCount={activeUsersCount.current}\r\n          totalUsersCount={totalUsersCount.current}\r\n        />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  // If not users page, but page exists, we display contruction in progress error\r\n  if (!link || allLinks.includes(link)) {\r\n    return (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Error linkExists />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  // Else we just render not available error\r\n  return (\r\n    <>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Error />\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"names":["Users","lazy","Error","allLinks","sidebarSection","forEach","sect","linkName","children","map","child","nameToUrl","name","concat","Main","link","useParams","users","setUsers","useState","activeUsersCount","useRef","totalUsersCount","useEffect","async","rawUsers","getUsers","current","fetchedUsers","user","status","changeUserType","error","fetchUsers","_jsx","Suspense","fallback","includes","linkExists","_Fragment"],"sourceRoot":""}