{"version":3,"file":"static/js/300.02244086.chunk.js","mappings":"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","sources":["components/LgButton.tsx","components/Tier.tsx","components/UserInfo.tsx","routes/UserDetails.tsx"],"sourcesContent":["import { ComponentPropsWithoutRef } from \"react\";\r\nimport { changeUserstatus } from \"../helper\";\r\nimport { TStatus } from \"../types\";\r\n\r\ntype TButtonProps = ComponentPropsWithoutRef<\"button\"> & {\r\n  children: React.ReactNode;\r\n  userId: string | undefined;\r\n  status: TStatus;\r\n};\r\n\r\nconst LgButton = ({ children, color, status, userId }: TButtonProps) => {\r\n  const style = {\r\n    padding: \"0.75rem 1rem\",\r\n    borderRadius: \"0.5rem\",\r\n    color,\r\n    border: `1px solid ${color}`,\r\n    cursor: \"pointer\",\r\n    margin: \"0 10px\",\r\n    fontWeight: 600,\r\n    fontSize: \"0.875\",\r\n    letterSpacing: \"0.05rem\",\r\n  };\r\n\r\n  const handleClick = async (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    // Change user status\r\n    const newUser = await changeUserstatus(status, userId as string);\r\n    console.log(newUser);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button style={style} onClick={handleClick}>\r\n        {(children as string).toUpperCase()} USER\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LgButton;\r\n","import filledStar from \"../img/filled-star.png\";\r\nimport unfilledStar from \"../img/unfilled-star.png\";\r\nimport { Ttier } from \"../types\";\r\n\r\ntype tTier = {\r\n  tier: Ttier;\r\n};\r\n\r\nconst Tier = ({ tier }: tTier) => {\r\n  switch (tier) {\r\n    case 1:\r\n      return (\r\n        <>\r\n          <div>\r\n            <img src={filledStar} alt=\"filledstar\" />\r\n            <img src={unfilledStar} alt=\"unfilledstar\" />\r\n            <img src={unfilledStar} alt=\"unfilledstar\" />\r\n          </div>\r\n        </>\r\n      );\r\n      break;\r\n    case 2:\r\n      return (\r\n        <>\r\n          <div>\r\n            <img src={filledStar} alt=\"filledstar\" />\r\n            <img src={filledStar} alt=\"filledstar\" />\r\n            <img src={unfilledStar} alt=\"unfilledstar\" />\r\n          </div>\r\n        </>\r\n      );\r\n    case 3:\r\n      return (\r\n        <>\r\n          <div>\r\n            <img src={filledStar} alt=\"filledstar\" />\r\n            <img src={filledStar} alt=\"filledstar\" />\r\n            <img src={filledStar} alt=\"filledstar\" />\r\n          </div>\r\n        </>\r\n      );\r\n  }\r\n};\r\n\r\nexport default Tier;\r\n","import { TUserComplete } from \"../types\";\r\n\r\nimport \"../styles/UserInfo.css\";\r\n\r\nconst UserInfoDict = ({\r\n  info,\r\n  user,\r\n}: {\r\n  info: {\r\n    title: \"string\";\r\n    values: [\r\n      {\r\n        title: string;\r\n        value: string;\r\n      }\r\n    ];\r\n  };\r\n  user: TUserComplete;\r\n}) => {\r\n  return (\r\n    <div className=\"info-box\">\r\n      <h4>{info.title}</h4>\r\n      <div className=\"info-group-con\">\r\n        {info.values.map((group) => {\r\n          let title = group.title.toLocaleUpperCase();\r\n          let value = group.value;\r\n\r\n          // Correct the name, email, gender\r\n          if ((info.title as string) === \"Personal Information\") {\r\n            if (group.title === \"FULL NAME\") {\r\n              value = user.name;\r\n            }\r\n            if (group.title === \"Email Address\") {\r\n              value = user.email;\r\n            }\r\n            if (group.title === \"Gender\") {\r\n              value = user.gender;\r\n            }\r\n          }\r\n\r\n          // Make sure the income is displayed in naira\r\n          if (group.title === \"Monthly income\") {\r\n            const incomeLimits = value.split(\"- \");\r\n            value = `₦${incomeLimits[0]} - ₦${incomeLimits[1]}`;\r\n          }\r\n\r\n          // Make sure the loan value is displayed in naira\r\n          if (group.title === \"loan repayment\") {\r\n            value = `₦${group.value}`;\r\n          }\r\n\r\n          // Correct the phone numbers that are not corrected\r\n          if (\r\n            group.title === \"Phone Number\" &&\r\n            (info.title as string) !== \"Personal Information\"\r\n          ) {\r\n            value = `+234 ${group.value}`;\r\n          }\r\n          return (\r\n            <div className=\"info-group\" key={group.title}>\r\n              <p className=\"key\">{title}</p>\r\n              <p className=\"value nowrap\">{value}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserInfo = ({ user }: { user: TUserComplete }) => {\r\n  return (\r\n    <>\r\n      {user.generalDetails.map((info) => {\r\n        return <UserInfoDict info={info} user={user} key={info.title} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import { useLoaderData, useNavigate } from \"react-router-dom\";\r\n\r\nimport LgButton from \"../components/LgButton\";\r\nimport { Ttier, TUserComplete } from \"../types\";\r\n\r\nimport backArr from \"../img/back arrow.png\";\r\nimport userAvatar from \"../img/user-avatar.png\";\r\nimport \"../styles/UserDetails.css\";\r\nimport Tier from \"../components/Tier\";\r\nimport { useState } from \"react\";\r\nimport UserInfo from \"../components/UserInfo\";\r\n\r\nconst pages = [\r\n  \"General Details\",\r\n  \"Documents\",\r\n  \"Bank Details\",\r\n  \"Loans\",\r\n  \"Savings\",\r\n  \"App and System\",\r\n] as const;\r\n\r\nconst UserDetails = () => {\r\n  const user = useLoaderData() as TUserComplete;\r\n  const navigate = useNavigate();\r\n\r\n  const [currentNav, setCurrentNav] = useState<string>(pages[0]);\r\n\r\n  const handleBackPage = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const handlePageChange =\r\n    (page: string) => (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n      setCurrentNav(page);\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <article className=\"user-details\">\r\n        <section className=\"sect-1\">\r\n          <button onClick={handleBackPage}>\r\n            <div className=\"button-con\">\r\n              <img src={backArr} alt=\"back arrow\" width={30} height={30} />\r\n              <span>Back To Users</span>\r\n            </div>\r\n          </button>\r\n        </section>\r\n        <section className=\"sect-2\">\r\n          <h1 className=\"bold\">User Details</h1>\r\n          <div className=\"button-con\">\r\n            <LgButton\r\n              color=\"rgba(228, 3, 59, 1)\"\r\n              status=\"Blacklisted\"\r\n              userId={user.id}\r\n            >\r\n              blacklist\r\n            </LgButton>\r\n            <LgButton\r\n              color=\"rgba(57, 205, 204, 1)\"\r\n              status=\"Active\"\r\n              userId={user.id}\r\n            >\r\n              activate\r\n            </LgButton>\r\n          </div>\r\n        </section>\r\n        <section className=\"sect-3\">\r\n          <div className=\"user-con\">\r\n            <figure className=\"fig-1\">\r\n              <img src={userAvatar} alt=\"user avatar\" height={40} width={40} />\r\n            </figure>\r\n            <div className=\"user-display\">\r\n              <h2 className=\"bold\">{`${user.name}`}</h2>\r\n              <p>{`${user.guid}`}</p>\r\n            </div>\r\n            <div className=\"vert\"></div>\r\n            <div className=\"user-display\">\r\n              <h4 className=\"bold\">User's Tier</h4>\r\n              <div className=\"tier nowrap\">\r\n                <Tier tier={user.tier as Ttier} />\r\n              </div>\r\n            </div>\r\n            <div className=\"vert\"></div>\r\n            <div className=\"user-display\">\r\n              <h2 className=\"bold\">{`₦${user.cash}`}</h2>\r\n              <p>{`${user.acctNo}/Providus Bank`}</p>\r\n            </div>\r\n          </div>\r\n          <nav>\r\n            {pages.map((page) => {\r\n              return (\r\n                <div\r\n                  // If the page is correct page, set the link to show it is active\r\n                  key={page}\r\n                  className={`${\r\n                    currentNav === page ? \"link link-active \" : \"link\"\r\n                  }`}\r\n                  onClick={handlePageChange(page)}\r\n                >\r\n                  <p>{page}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </nav>\r\n        </section>\r\n        <section className=\"sect-4\">\r\n          {currentNav !== pages[0] ? (\r\n            <h1 className=\"err\">Page Under Construction</h1>\r\n          ) : (\r\n            <UserInfo user={user} />\r\n          )}\r\n        </section>\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n"],"names":["_ref","children","color","status","userId","style","padding","borderRadius","border","concat","cursor","margin","fontWeight","fontSize","letterSpacing","_jsx","_Fragment","_jsxs","onClick","async","newUser","changeUserstatus","console","log","toUpperCase","tier","src","filledStar","alt","unfilledStar","UserInfoDict","info","user","className","title","values","map","group","toLocaleUpperCase","value","name","email","gender","incomeLimits","split","_ref2","generalDetails","pages","UserDetails","useLoaderData","navigate","useNavigate","currentNav","setCurrentNav","useState","handlePageChange","page","e","width","height","LgButton","id","guid","Tier","cash","acctNo","UserInfo"],"sourceRoot":""}